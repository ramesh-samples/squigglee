- hosts: localhost
  connection: local
  gather_facts: True    
  tasks:
    - name: Refresh dynamic inventory cache 
      local_action: command hosts/ec2.py --refresh-cache
    - name: Refresh seed list
      local_action: shell hosts/ec2.py --list | python seeds.py
- hosts: tag_cluster_{{cluster}}
  user: ec2-user 
  vars:
#    zk_version: "zookeeper-3.4.6"
    zk_version: "zookeeper-3.5.0-alpha"
    cluster: "TSR_EC2_CLUST"
  tasks:
     - shell: "sudo ./zkServer.sh stop"
       args:
         chdir: /opt/zklocal/{{ zk_version }}/bin
       ignore_errors: True
     - shell: "sudo ./zkServer.sh stop"
       args:
         chdir: /opt/zkoverlay/{{ zk_version }}/bin
       ignore_errors: True
     - copy: src="./zoo.cfg.dynamic{{hostvars[inventory_hostname]['ec2_tag_ring_position']}}" dest="/opt/zklocal/{{ zk_version }}/conf/zoo.cfg.dynamic" force="yes" owner="ec2-user" group="ec2-user" mode="0644" 
       sudo: yes
       ignore_errors: True
     - copy: src="./zoo.cfg.dynamic.overlay{{hostvars[inventory_hostname]['ec2_tag_ring_position']}}" dest="/opt/zkoverlay/{{ zk_version }}/conf/zoo.cfg.dynamic.overlay" force="yes" owner="ec2-user" group="ec2-user" mode="0644" 
       sudo: yes
       ignore_errors: True          
     - lineinfile: dest=/etc/hosts regexp='zk{{hostvars[item]['ec2_tag_ring_position']}}.{{cluster}}.squigglee' state=absent
       with_items: groups['tag_cluster_{{cluster}}']
       sudo: yes 
       ignore_errors: True 
     - lineinfile: dest=/etc/hosts line='{{ hostvars[item]['ec2_private_ip_address'] }} zk{{hostvars[item]['ec2_tag_ring_position']}}.{{cluster}}.squigglee zk{{hostvars[item]['ec2_tag_ring_position']}}' state=present
       when: ( "{{hostvars[item]["ec2_region"]}}" == "{{ hostvars[inventory_hostname]['ec2_region'] }}" )
       with_items: groups['tag_cluster_{{cluster}}']
       sudo: yes 
       ignore_errors: True 
     - lineinfile: dest=/etc/hosts line='{{ hostvars[item]['ec2_ip_address'] }} zk{{hostvars[item]['ec2_tag_ring_position']}}.{{cluster}}.squigglee zk{{hostvars[item]['ec2_tag_ring_position']}}' state=present
       when: ( "{{hostvars[item]["ec2_region"]}}" != "{{ hostvars[inventory_hostname]['ec2_region'] }}" )
       with_items: groups['tag_cluster_{{cluster}}']
       sudo: yes        
       ignore_errors: True 
- hosts: tag_is_bootstrap_node_yes:&tag_cluster_{{cluster}}
  user: ec2-user 
  vars:
#    zk_version: "zookeeper-3.4.6"
    zk_version: "zookeeper-3.5.0-alpha"
    cluster: "TSR_EC2_CLUST"
  tasks:
     - shell: "sudo ./zkServer.sh start"  
       args:
         chdir: /opt/zklocal/{{ zk_version }}/bin
       ignore_errors: True
     - shell: "sudo ./zkServer.sh start"  
       args:
         chdir: /opt/zkoverlay/{{ zk_version }}/bin
       ignore_errors: True         
     - pause: seconds=10
- hosts: tag_is_seed_yes:tag_is_bootstrap_node_no:&tag_cluster_{{cluster}}
  user: ec2-user 
  vars:
#    zk_version: "zookeeper-3.4.6"
    zk_version: "zookeeper-3.5.0-alpha"
  tasks:
     - shell: "sudo ./zkServer.sh start"  
       args:
         chdir: /opt/zklocal/{{ zk_version }}/bin
       ignore_errors: True
     - shell: "sudo ./zkServer.sh start"  
       args:
         chdir: /opt/zkoverlay/{{ zk_version }}/bin
       ignore_errors: True         
     - pause: seconds=10
- hosts: tag_is_seed_no:tag_is_bootstrap_node_no:&tag_cluster_{{cluster}} 
  user: ec2-user 
  vars:
#    zk_version: "zookeeper-3.4.6"
    zk_version: "zookeeper-3.5.0-alpha"
  tasks:
     - shell: "sudo ./zkServer.sh start"  
       args:
         chdir: /opt/zklocal/{{ zk_version }}/bin
       ignore_errors: True
     - shell: "sudo ./zkServer.sh start"  
       args:
         chdir: /opt/zkoverlay/{{ zk_version }}/bin
       ignore_errors: True